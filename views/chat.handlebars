<!DOCTYPE html>
<html lang="ru">

<head>
	<title>Чат на NodeJS</title>
	<meta charset="utf-8" />
	<link href="../chatCSS.css" rel="stylesheet" type="text/css" />
	<script src="https://code.jquery.com/jquery-3.4.0.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js"></script>
</head>

<body>
	<div class="user-list">
		<button class="logout">Выйти</button>
		<h3>Онлайн</h3>
		<ul class="online-list"></ul>
	</div>
	<ul id="messages">
		<!-- Вывод истории сообщений -->
		{{#each chatHistory}}
		<li><span class="message-time">{{this.time}}</span> <span class="username">{{this.username}}</span>:
			{{this.text}}</li>
		{{/each}}
	</ul>
	<form action="">
		<input type="text" name="msgField" id="m" autocomplete="off" /><button id="send">Send</button>
	</form>
	<script>
		const name = '{{ currentUsername }}';
		const PORT = '{{ PORT }}';

		// Функция для обновления онлайн-листа
		const renderOnlineList = currentOnline => {
			$('.online-list').empty();
			for (let i = 0; i < currentOnline.length; i++) {
				if (currentOnline[i] === name) {
					$('.online-list').append(
						"<li class='current-user'>" + name + '</li>'
					);
				} else {
					$('.online-list').append(
						'<li>' + currentOnline[i] + '</li>'
					);
				}
			}
		};

		// Функция для определения времени отправки сообщения
		const getMsgTime = () => {
			const date = new Date()

			const hours = ('0' + date.getHours()).slice(-2);
			const minutes = ('0' + date.getMinutes()).slice(-2);
			const seconds = ('0' + date.getSeconds()).slice(-2);

			return hours + ':' + minutes + ':' + seconds;
		};

		// При отправке сообщения
		$('#send').on('click', e => {
			e.preventDefault();
			const text = $('#m').val();
			$('#messages').append(
				'<li><span class="message-time">' +
				getMsgTime() +
				'</span> <span class="current-user">' +
				name +
				'</span>: <span class="msg"></span></li>'
			);
			$('span.msg:last').text(text);
			socket.emit('message', {
				sender: name,
				time: new Date(),
				text,
			});
			$('#m').val('');
		});

		// При выходе из аккаунта
		$('.logout').on('click', e => {
			e.preventDefault();
			socket.disconnect();
			window.location.replace('/logout');
		});

		const socket = io.connect(`http://localhost:${PORT}`);

		// При коннекте текущего пользователя
		socket.on('connect', () => {
			$('.online-list').append(
				'<li class="current-user">' + name + '</li>'
			);
		});

		// При коннекте другого пользователя
		socket.on('user-connected', connectedName => {
			console.log('New client connected:', connectedName);
		});

		// При дисконнекте другого пользователя
		socket.on('user-disconnected', disconnectedName => {
			console.log('Client disconnected:', disconnectedName);
		});

		// При отправке сообщения кем-либо
		socket.on('message', msg => {
			console.log(
				'Client-side on message recieved:',
				msg.sender + ': ',
				msg.text
			);
			$('#messages').append(
				'<li><span class="message-time">' +
				msg.time +
				'</span> <span class="username">' +
				msg.sender +
				'</span>: <span class="msg"></span></li>'
			);
			$('span.msg:last').text(msg.text);
		});

		// При запросе обновления онлайн-листа
		socket.on('onlineListUpdate', currentOnline => {
			renderOnlineList(currentOnline);
		});
	</script>
</body>

</html>